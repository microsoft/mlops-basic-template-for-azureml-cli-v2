pr: none
trigger:
  branches:
   include:
     - development
  paths:
    include:
      - devops/pipeline/templates/*
      - devops/pipeline/requirements/*
      - devops/pipeline/ci_dev_pipeline.yml
      - src/nyc_src/*
      - mlops/nyc-taxi/*
      - src/shared/*

pool:
  vmImage: ubuntu-18.04

variables:
- group: MLOps-DEV-VG

stages:
    - stage: build
      displayName: build_validation
      jobs:
        - template: build_validation_pipeline.yml

    - stage: execute
      displayName: execute_job
      variables:
      - template: templates/experiment_variables.yml
      - name: EXPERIMENT_TYPE
        value: nyc
      - name: ENVIRONMENT_NAME
        value: nyc_dev_env
      jobs:
      - job: Submit_Job_Pipeline
        steps:
        - template: templates/configure_azureml_agent.yml
        - template: templates/connect_to_workspace.yml
        - template: templates/create_compute.yml
          parameters: 
            cluster_name: $(CLUSTER_NAME)
            size: $(CLUSTER_SIZE)
        - template: templates/create_environment.yml
          parameters: 
            environment_name: $(ENVIRONMENT_NAME)
            environment_file: ./mlops/nyc-taxi/environment.yml
        - template: templates/execute_no_wait_job.yml
          parameters:
            amlJobExecutionScript: ./mlops/nyc-taxi/pipeline.yml
            amlJobSetCommand: "--set experiment_name=$(EXPERIMENT_NAME) \
                                settings.default_compute=azureml:$(CLUSTER_NAME) \
                                jobs.prep_job.environment=azureml:$(ENVIRONMENT_NAME)@latest \
                                jobs.transform_job.environment=azureml:$(ENVIRONMENT_NAME)@latest \
                                jobs.train_job.environment=azureml:$(ENVIRONMENT_NAME)@latest \
                                jobs.predict_job.environment=azureml:$(ENVIRONMENT_NAME)@latest \
                                jobs.score_job.environment=azureml:$(ENVIRONMENT_NAME)@latest \                          
                                display_name=$(DISPLAY_NAME)"

      # Async job wait for results
      # This is a early preview feature and it can be changed prior GA
      # https://github.com/Azure/azure-mlops-automation for details or get access

      # Option 1: Using the extension
      # - job: WaitForCallback
      #   pool: server
      #   timeoutInMinutes: 0
      #   dependsOn: Submit_Job_Pipeline
      #   variables: 
      #     run_name_from_submit_job: $[ dependencies.Submit_Job_Pipeline.outputs['submit_aml_job_task.RUN_NAME'] ] 
      #   steps:
      #   - task: AMLJobWaitTask@0
      #     inputs:
      #       # a service connection with Azure ML scope (see the doc from the link above)
      #       azureSubscription: 'azuremlconnection'
      #       runName: $(run_name_from_submit_job)

      # Option 2: No extension
      - job: AzureML_Prepare_Pipeline_Run
        displayName: Wait for Azure ML job
        steps:
        - task: AzureCLI@2
          name: retrieveAzureServiceConnection
          displayName: Retrieve Azure Service Connection Details
          inputs:
            azureSubscription: $(AZURE_RM_SVC_CONNECTION)
            scriptLocation: inlineScript
            scriptType: bash
            inlineScript: |
              export subscriptionId=$(az account show --query id -o tsv)
              echo "##vso[task.setvariable variable=SUBSCRIPTION_ID;isOutput=true]$subscriptionId"
              echo "##vso[task.setvariable variable=RESOURCE_GROUP;isOutput=true]$RESOURCE_GROUP"
              echo "##vso[task.setvariable variable=WORKSPACE_NAME;isOutput=true]$WORKSPACE_NAME"
              echo "##vso[task.setvariable variable=AML_REST_CONNECTION;isOutput=true]$AML_REST_CONNECTION"
            addSpnToEnvironment: true
        - task: AzureCLI@2
          displayName: Get Aad Token
          name: getAadToken
          inputs:
            azureSubscription: $(AZURE_RM_SVC_CONNECTION)
            addSpnToEnvironment: true
            scriptLocation: inlineScript
            scriptType: bash
            inlineScript: |
              export aadToken=$(az account get-access-token --resource=https://management.azure.com --query accessToken -o tsv)
              echo "##vso[task.setvariable variable=AAD_TOKEN;isOutput=true;issecret=true]$aadToken"

      - job: AzureML_Wait_Pipeline
        displayName: Waiting for Azure ML Pipeline
        dependsOn: 
        - AzureML_Prepare_Pipeline_Run
        - Submit_Job_Pipeline
        timeoutInMinutes: 0
        pool: server
        variables:
          RUN_NAME: $[ dependencies.Submit_Job_Pipeline.outputs['submit_aml_job_task.RUN_NAME'] ]
          SUBSCRIPTION_ID: $[ dependencies.AzureML_Prepare_Pipeline_Run.outputs['retrieveAzureServiceConnection.SUBSCRIPTION_ID'] ]
          RESOURCE_GROUP: $[ dependencies.AzureML_Prepare_Pipeline_Run.outputs['retrieveAzureServiceConnection.RESOURCE_GROUP'] ]
          WORKSPACE_NAME: $[ dependencies.AzureML_Prepare_Pipeline_Run.outputs['retrieveAzureServiceConnection.WORKSPACE_NAME'] ]
          AML_REST_CONNECTION: $[ dependencies.AzureML_Prepare_Pipeline_Run.outputs['retrieveAzureServiceConnection.AML_REST_CONNECTION'] ]
          AAD_TOKEN: $[ dependencies.AzureML_Prepare_Pipeline_Run.outputs['getAadToken.AAD_TOKEN'] ]
        steps:
        - task: InvokeRESTAPI@1
          displayName: Wait for job results
          inputs:
            connectionType: connectedServiceName
            serviceConnection: $(AML_REST_CONNECTION)
            method: POST
            body: "{ \"EventInfo\": { \"Id\": \"$(RUN_NAME)\", \"EventType\": \"RunTerminated\" }, \"CallbackService\": \"AzureDevOps\", \"ServiceDetails\": { \"JobId\": \"$(system.jobId)\", \"HubName\": \"$(system.HostType)\", \"TaskInstanceId\": \"$(system.TaskInstanceId)\", \"PlanId\": \"$(system.planId)\", \"ProjectId\": \"$(system.teamProjectId)\", \"PlanUri\": \"$(system.CollectionUri)\", \"AuthToken\": \"$(system.AccessToken)\", \"TaskInstanceName\": \"InvokeRESTAPI\", \"TimelineId\": \"$(system.TimelineId)\" } }"
            headers: "{\n\"Content-Type\":\"application/json\", \n\"Authorization\":\"Bearer $(AAD_TOKEN)\" \n}"
            urlSuffix: "subscriptions/$(SUBSCRIPTION_ID)/resourceGroups/$(RESOURCE_GROUP)/providers/Microsoft.MachineLearningServices/workspaces/$(WORKSPACE_NAME)/webhooks/CreateWebhook"
            waitForCompletion: true
